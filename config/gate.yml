server:
  port: 8084
  address: 0.0.0.0  

spinnaker:
  redis:
  enabled: true
  connection: redis://redis:6379
  scheduler: default
  parallelism: -1

services:
  deck:
    baseUrl: http://spinnaker.192.168.42.74.xip.io
    auth:
      enabled: false
  orca:
    baseUrl: http://orca:8083
  front50:
    baseUrl: http://front50:8080
  clouddriver:
    baseUrl: http://clouddriver:7002
# semi-optional services (Everybody except Netflix needs these):
  rosco:
    enabled: false
    baseUrl: http://rosco:8087
    # These are here only for Netflix, whose bakery does not support dynamically fetching these properties.
    # Modifying the details below when rosco.enabled is true will have no effect (do it in the Rosco config).
    # defaults:
    #   bakeOptions:
    #     - cloudProvider: aws
    #       baseImages:
    #       - id: trusty
    #         shortDescription: v14.04
    #         detailedDescription: Ubuntu Trusty Tahr v14.04
    #         packageType: DEB
    #       - id: ubuntu
    #         shortDescription: v12.04
    #         detailedDescription: Ubuntu Precise Pangolin v12.04
    #         packageType: DEB
    #       - id: centos
    #         shortDescription: deprecated
    #         detailedDescription: CentOS v5.11
    #         packageType: RPM
# optional services:
  echo:
    enabled: false
  fiat:
    enabled: false
    autoConfig: false
  flapjack:
    enabled: false
  igor:
    enabled: true
    baseUrl: http://igor:8088
  mahe:
    enabled: false

redis:
  enabled: true
  connection: redis://redis:6379
  scheduler: default
  parallelism: -1

swagger:
  enabled: true
  title: Spinnaker API
  description:
  contact:
  patterns:
    - .*tasks.*
    - .*applications.*
    - .*securityGroups.*
    - /search
    - .*pipelines.*
    - .*loadBalancers.*
    - .*instances.*
    - .*images.*
    - .*elasticIps.*
    - .*credentials.*
    - .*events.*
    - .*builds.*
    - .*instanceTypes.*
    - .*vpcs.*
    - .*subnets.*
    - .*networks.*
    - .*bakery.*
    - .*executions.*

hystrix:
  command:
## Hystrix Global Defaults
    default:
      execution.isolation.thread.timeoutInMilliseconds: 60000
## Command-specific overrides
    fetchGlobalAccounts:
      execution.isolation.thread.timeoutInMilliseconds: 2000

spring:
  jackson:
    mapper:
      SORT_PROPERTIES_ALPHABETICALLY: true
    serialization:
      ORDER_MAP_ENTRIES_BY_KEYS: true

---

# spring:
#   profiles: googleOAuth
#   oauth2:
#     client:
#       # Set these values in your own config file (e.g. spinnaker-local.yml or gate-googleOAuth.yml).
#       # clientId:
#       # clientSecret:
#       accessTokenUri: https://www.googleapis.com/oauth2/v4/token
#       userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
#       scope: "profile email"
#     resource:
#       userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
#     userInfoMapping:
#       email: email
#       firstName: given_name
#       lastName: family_name

# ---

# spring:
#   profiles: azureOAuth
#   oauth2:
#     client:
#       # Set these values in your own config file (e.g. spinnaker-local.yml or gate-azureOAuth.yml).
#       # clientId:
#       # clientSecret:
#       accessTokenUri: https://login.microsoftonline.com/${azureTenantId}/oauth2/token
#       userAuthorizationUri: https://login.microsoftonline.com/${azureTenantId}/oauth2/authorize?resource=https://graph.windows.net
#       scope: "profile"
#       clientAuthenticationScheme: query
#     resource:
#       userInfoUri: https://graph.windows.net/me?api-version=1.6
#     userInfoMapping:
#       email: userPrincipalName
#       firstName: givenName
#       lastName: surname

# ---

# spring:
#   profiles: githubOAuth
#   oauth2:
#     client:
#       # Set these values in your own config file (e.g. spinnaker-local.yml or gate-githubOAuth.yml).
#       # clientId:
#       # clientSecret:
#       userAuthorizationUri: https://github.com/login/oauth/authorize
#       accessTokenUri: https://github.com/login/oauth/access_token
#       scope: user:email
#     resource:
#       userInfoUri: https://api.github.com/user
#     userInfoMapping:
#       email: email
#       firstName:
#       lastName: name
#       username: login






# redis:
#   enabled: true
#   connection: redis://redis:6379
#   scheduler: default
#   parallelism: -1
# server:
#   port: 8084
#   address: 0.0.0.0
# services:
#   clouddriver:
#     baseUrl: http://clouddriver:7002
#   deck:
#     baseUrl: http://deck.192.168.42.74.xip.io
#   front50:
#     baseUrl: http://front50:8080
#   orca:
#     baseUrl: http://orca:8083
#   igor:
#     enabled: false
#     baseUrl: http://igor:8088
#   rosco:
#     enabled: false
#     baseUrl: http://rosco:8087
#   echo:
#     enabled: false
#     baseUrl: http://echo:8089

#   fiat:
#     enabled: false
#     autoConfig: false
#   flapjack:
#     enabled: false
#   mahe:
#     enabled: false